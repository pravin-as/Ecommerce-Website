[{"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\index.js":"1","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js":"2","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reportWebVitals.js":"3","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\store\\index.js":"4","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\auth.actions.js":"5","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js":"6","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\index.js":"7","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Signin\\index.js":"8","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Orders\\index.js":"9","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Signup\\index.js":"10","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Home\\index.js":"11","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Products\\index.js":"12","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Category\\index.js":"13","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\index.js":"14","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\constants.js":"15","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js":"16","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js":"17","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\product.action.js":"18","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js":"19","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\initialData.action.js":"20","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js":"21","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\product.reducer.js":"22","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\user.reducer.js":"23","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\auth.reducers.js":"24","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js":"25","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\order.reducer.js":"26","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Input\\index.js":"27","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.js":"28","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Modal\\index.js":"29","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.js":"30","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\NewPage\\index.js":"31","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\page.action.js":"32","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\page.reducer.js":"33","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Category\\components\\UpdateCategoriesModal.js":"34","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Category\\components\\AddCategoryModal.js":"35","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Card\\index.js":"36","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\linearCategories.js":"37","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\order.action.js":"38"},{"size":770,"mtime":1656830397428,"results":"39","hashOfConfig":"40"},{"size":1663,"mtime":1656830371407,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1654427340534,"results":"42","hashOfConfig":"40"},{"size":295,"mtime":1656830619556,"results":"43","hashOfConfig":"40"},{"size":1954,"mtime":1656828631201,"results":"44","hashOfConfig":"40"},{"size":296,"mtime":1656829029694,"results":"45","hashOfConfig":"40"},{"size":232,"mtime":1656828679229,"results":"46","hashOfConfig":"40"},{"size":1663,"mtime":1656830003849,"results":"47","hashOfConfig":"40"},{"size":3251,"mtime":1656829961482,"results":"48","hashOfConfig":"40"},{"size":2566,"mtime":1656830014471,"results":"49","hashOfConfig":"40"},{"size":1079,"mtime":1656829822366,"results":"50","hashOfConfig":"40"},{"size":6638,"mtime":1656829986358,"results":"51","hashOfConfig":"40"},{"size":10015,"mtime":1656829745271,"results":"52","hashOfConfig":"40"},{"size":526,"mtime":1656830207419,"results":"53","hashOfConfig":"40"},{"size":1998,"mtime":1656828650943,"results":"54","hashOfConfig":"40"},{"size":949,"mtime":1656830084462,"results":"55","hashOfConfig":"40"},{"size":767,"mtime":1656828741639,"results":"56","hashOfConfig":"40"},{"size":192,"mtime":1656828728028,"results":"57","hashOfConfig":"40"},{"size":2802,"mtime":1656828642223,"results":"58","hashOfConfig":"40"},{"size":806,"mtime":1656828676682,"results":"59","hashOfConfig":"40"},{"size":148,"mtime":1654427340574,"results":"60","hashOfConfig":"40"},{"size":379,"mtime":1656830236911,"results":"61","hashOfConfig":"40"},{"size":788,"mtime":1656830264077,"results":"62","hashOfConfig":"40"},{"size":1347,"mtime":1656830154083,"results":"63","hashOfConfig":"40"},{"size":3467,"mtime":1656830160327,"results":"64","hashOfConfig":"40"},{"size":381,"mtime":1656830214966,"results":"65","hashOfConfig":"40"},{"size":1530,"mtime":1656829145451,"results":"66","hashOfConfig":"40"},{"size":1360,"mtime":1656829041973,"results":"67","hashOfConfig":"40"},{"size":1158,"mtime":1656829188656,"results":"68","hashOfConfig":"40"},{"size":2373,"mtime":1656828879659,"results":"69","hashOfConfig":"40"},{"size":6962,"mtime":1656829876299,"results":"70","hashOfConfig":"40"},{"size":767,"mtime":1656828717434,"results":"71","hashOfConfig":"40"},{"size":770,"mtime":1656830253523,"results":"72","hashOfConfig":"40"},{"size":4933,"mtime":1656829338214,"results":"73","hashOfConfig":"40"},{"size":1853,"mtime":1656829311107,"results":"74","hashOfConfig":"40"},{"size":462,"mtime":1656829121238,"results":"75","hashOfConfig":"40"},{"size":394,"mtime":1656830128358,"results":"76","hashOfConfig":"40"},{"size":833,"mtime":1656828674884,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vwsdm6",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\App.js",["209","210"],[],"import React, { useEffect } from 'react';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom'; //Switch is replaced by Routes\nimport Home from './container/Home';\nimport Signin from './container/Signin';\nimport Signup from './container/Signup';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn } from './actions/auth.actions';\nimport { Products } from './container/Products';\nimport { Orders } from './container/Orders';\nimport { Category } from './container/Category';\nimport { getAllCategory, getInitialData } from './actions'\nimport { NewPage } from './container/NewPage';\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if (auth.authenticate){\n      dispatch(getInitialData());\n    }\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<PrivateRoute><Home /></PrivateRoute>} />\n        <Route path=\"/page\" element={<PrivateRoute><NewPage/></PrivateRoute>} />\n        <Route path=\"/products\" element={<PrivateRoute><Products/></PrivateRoute>} />\n        <Route path=\"/category\" element={<PrivateRoute><Category/></PrivateRoute>} />\n        <Route path=\"/orders\" element={<PrivateRoute><Orders/></PrivateRoute>} />\n        <Route path=\"/signin\" element={<Signin />} />\n        <Route exact path=\"/signin\" element={<Signin />} />\n        <Route exact path=\"/signup\" element={<Signup />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\store\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\auth.actions.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Signin\\index.js",["211","212","213"],[],"import { React, useEffect, useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\nimport Input from '../../components/UI/Input/index';\nimport { login } from '../../actions/index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n/**\n* @author\n* @function Signin\n**/\n\nconst Signin = (props) => {\n\n  const [email,setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [error,setError]=useState('');\n  const dispatch=useDispatch();\n  const auth=useSelector(state=>state.auth);\n\n\n  const userLogin=(e)=>{\n    e.preventDefault();\n    const user={\n      email,password\n    }\n    dispatch(login(user));\n  }\n\n  if (auth.authenticate){\n    return < Navigate to ={'/'}/>\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <Row style={{margin:'50px'}}>\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form onSubmit={userLogin}>\n            <Input\n                label=\"Email\"\n                placeholder=\"Email\"\n                value={email}\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <Input\n                label=\"Password\"\n                placeholder=\"Password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n\n}\n\nexport default Signin;","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Orders\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Signup\\index.js",["214","215"],[],"import React, { useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap'\nimport Input from '../../components/UI/Input/index';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signup } from '../../actions';\n\n/**\n* @author\n* @function Signup\n**/\n\nconst Signup = (props) => {\n\n  const [firstName,setFirstName]=useState('');\n  const [lastName,setLastName]=useState('');\n  const [email,setEmail]=useState('');\n  const [password, setPassword]=useState('');\n  const [error,setError]= useState('');\n  const auth=useSelector(state=>state.auth);\n  const user=useSelector(state=>state.user);\n  const dispatch=useDispatch();\n\n  const userSignup=(e)=>{\n    e.preventDefault();\n    const user={\n      firstName,lastName,email,password\n    }\n    dispatch(signup(user));\n  }\n\n  if (auth.authenticate) {\n    return < Navigate to={'/'} />\n  }\n\n  if (user.loading){\n    return <p>Loading...!</p>\n  }\n\n  return (\n    <Layout>\n      <Container>\n        {user.message}\n        <Row style={{ margin: '50px' }}>\n          <Col md={{ span: 6, offset: 3 }}>\n            <Form onSubmit={userSignup}>\n              <Row>\n                <Col md={6}>\n                  <Input\n                    label=\"First Name\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    type=\"text\"\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </Col>\n                <Col md={6}>\n                  <Input\n                    label=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    value={lastName}\n                    type=\"text\"\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </Col>\n              </Row>\n              <Input\n                label=\"Email\"\n                placeholder=\"Email\"\n                value={email}\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n\n              <Input\n                label=\"Password\"\n                placeholder=\"Password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n\n}\n\nexport default Signup;","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Home\\index.js",["216","217","218","219"],[],"import React from 'react'\nimport { Container, Col, Row } from 'react-bootstrap'\nimport Layout from '../../components/Layout'\nimport './style.css';\nimport { NavLink } from 'react-router-dom';\n\n/**\n* @author\n* @function Home\n**/\nconst Home = (props) => {\n  return (\n    <Layout sidebar>\n      \n\n      {/* <h1 style={{margin:'5rem',background:'white'}} className='text-center'> Welcome to Admin Dashboard</h1>\n      <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).</p> */}\n    </Layout>\n  )\n\n}\n\nexport default Home","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Products\\index.js",["220"],[],"import React, { useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { Container, Row, Col, Table } from 'react-bootstrap'\nimport Input from '../../components/UI/Input/index';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProduct } from '../../actions';\nimport Modal from '../../components/UI/Modal';\nimport './style.css';\nimport { generatePictureurl } from '../../urlConfig';\n\n/**\n* @author\n* @function Products\n**/\n\nexport const Products = (props) => {\n\n  const [name, setName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [categoryId, setCategoryId] = useState('');\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n  const [productDetailModal,setProductDetailModal]=useState(false);\n  const [productDetails,setProductDetails]=useState(null);\n  const category = useSelector(state => state.category);\n  const product = useSelector(state => state.product);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', name);\n    form.append('quantity', quantity);\n    form.append('price', price);\n    form.append('description', description);\n    form.append('category', categoryId);\n    for (let pic of productPictures) {\n      form.append('productPicture', pic);\n    }\n\n    dispatch(addProduct(form));\n    setShow(false);\n  }\n  const handleShow = () => setShow(true);\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({ value: category._id, name: category.name });\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n    return options;\n  }\n\n  const handleProductPictures = (e) => {\n    setProductPictures([\n      ...productPictures,\n      e.target.files[0]\n    ]);\n  }\n  console.log(product.products.length);\n  console.log(product.products[0]);\n  const renderProducts = () => {\n    return (\n      <Table style={{fontSize:12}} responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Quantity</th>\n            <th>Category</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            product.products.length > 0 ?\n              product.products.map(product =>\n                <tr onClick={()=>showProductDetailsModal(product)} key={product._id}>\n                  <td>1</td>\n                  <td>{product.name}</td>\n                  <td>{product.price}</td>\n                  <td>{product.quantity}</td>\n                  <td>{product.category.name}</td>\n                </tr>\n              ) : null\n          }\n        </tbody>\n      </Table>\n    )\n  }\n\n  const renderAddProductModal = () => {\n    return (\n      <Modal\n        show={show}\n        handleClose={handleClose}\n        modalTitle={\"Add new Product\"}\n      >\n        <Input\n          label=\"Name\"\n          value={name}\n          placeholder={'Product Name'}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Input\n          label=\"Quantity\"\n          value={quantity}\n          placeholder={'Quantity'}\n          onChange={(e) => setQuantity(e.target.value)}\n        />\n        <Input\n          label=\"Price\"\n          value={price}\n          placeholder={'Price'}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <Input\n          label=\"Description\"\n          value={description}\n          placeholder={'Description'}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <select\n          className=\"form-control\"\n          value={categoryId}\n          onChange={(e) => setCategoryId(e.target.value)}>\n          <option>Select Category</option>\n          {\n            createCategoryList(category.categories).map(option =>\n              <option key={option.value} value={option.value}>{option.name}</option>)\n          }\n\n        </select>\n        {\n          productPictures.length > 0 ?\n            productPictures.map((pic, index) => <div key={index}>{pic.name}</div>) : null\n        }\n        <input type=\"file\" name=\"productPictures\" onChange={handleProductPictures} />\n      </Modal>\n    );\n  }\n\n  const handleCloseProductDetailsModal=()=>{\n    setProductDetailModal(false);\n  }\n\n  const showProductDetailsModal=(product)=>{\n    setProductDetails(product);\n    setProductDetailModal(true);\n  }\n\n  const renderShowProductDetailsModal = () => {\n    if (!productDetails){\n      return null;\n    }\n    return (\n      <Modal\n        show={productDetailModal}\n        handleClose={ handleCloseProductDetailsModal}\n        modalTitle={\"Product Details\"}\n        size=\"lg\"\n      >\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Name</label>\n            <p className=\"value\">{productDetails.name}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Price</label>\n            <p className=\"value\">{productDetails.price}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <label className=\"key\">Quantity</label>\n            <p className=\"value\">{productDetails.quantity}</p>\n          </Col>\n          <Col md=\"6\">\n            <label className=\"key\">Category</label>\n            <p className=\"value\">{productDetails.category.name}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <label className=\"key\">Description</label>\n            <p className=\"value\">{productDetails.description}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n              <label className='key'>Product Pictures</label>\n              <div style={{display:\"flex\"}}>\n              {productDetails.productPictures.map(picture=>\n                <div className=\"productImgContainer\">\n                  <img src={generatePictureurl(picture.img)}/>\n                </div>\n              )}\n              </div>\n          </Col>\n        </Row>\n\n      </Modal>\n    );\n  }\n\n  return (\n    <Layout sidebar>\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <h1>Products</h1>\n              <button onClick={handleShow}>Add</button>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {renderProducts()}\n          </Col>\n        </Row>\n      </Container>\n      { renderAddProductModal()}\n      {renderShowProductDetailsModal()}\n    </Layout>\n  )\n\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Category\\index.js",["221","222","223","224","225","226","227","228"],[],"import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from '../../actions';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input/index';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowDown, IoIosArrowForward, IoIosAdd, IoIosTrash, IoIosCloudUpload } from 'react-icons/io';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n/**\n* @author\n* @function Category\n**/\n\nexport const Category = (props) => {\n    const category = useSelector(state => state.category);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [categoryImage, setCategoryImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [checkedArray, setCheckedArray] = useState([]);\n    const [expandedArray, setExpandedArray] = useState([]);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        if (!category.loading){\n            setShow(false);\n        }\n    },[category.loading]);\n\n    const handleClose = () => {\n        const form = new FormData();\n        if (categoryName===\"\"){\n            alert(\"Name is required\");\n            setShow(false);\n            return;\n        }\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        form.append('categoryImage', categoryImage);\n        console.log(form);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n    const renderCategories = (categories) => {\n\n        let mycategories = [];\n        for (let category of categories) {\n            mycategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return mycategories;\n    }\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ value: category._id, name: category.name, parentId: category.parentId, type:category.type });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options);\n            }\n        }\n        return options;\n    }\n\n    const handleCategoryImage = (e) => {\n        setCategoryImage(e.target.files[0]);\n    }\n\n    const updateCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setUpdateCategoryModal(true)\n    }\n\n    const updateCheckedAndExpandedCategories = () => {\n        const categories = createCategoryList(category.categories)\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value)\n            category && checkedArray.push(category);\n        })\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value)\n            category && expandedArray.push(category);\n        })\n        setCheckedArray(checkedArray);\n        setExpandedArray(expandedArray);\n    }\n\n    const handleCategoryInput = (key, value, index, type) => {\n        if (type == \"checked\") {\n            const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\n            setCheckedArray(updatedCheckedArray);\n        } else if (type == \"expanded\") {\n            const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\n            setExpandedArray(updatedExpandedArray);\n        }\n    }\n\n    const updateCategoriesForm = () => {\n        const form = new FormData();\n\n        expandedArray.forEach((item, index) => {\n            form.append(\"_id\", item.value);\n            form.append(\"name\", item.name);\n            form.append(\"parentId\", item.parentId ? item.parentId : \"\");\n            form.append(\"type\", item.type);\n        });\n\n        checkedArray.forEach((item, index) => {\n            form.append(\"_id\", item.value);\n            form.append(\"name\", item.name);\n            form.append(\"parentId\", item.parentId ? item.parentId : \"\");\n            form.append(\"type\", item.type);\n        });\n        dispatch(updateCategories(form));\n    }\n\n    const deleteCategory = () => {\n        updateCheckedAndExpandedCategories();\n        setDeleteCategoryModal(true);\n    }\n\n    const deleteCategories = () => {\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n        if (checkedIdsArray.length > 0) {\n            dispatch(deleteCategoriesAction(checkedIdsArray))\n                .then(result => {\n                    if (result) {\n                        dispatch(getAllCategory());\n                        setDeleteCategoryModal(false);\n                    }\n                });\n        }\n        setDeleteCategoryModal(false);\n    }\n\n    const renderDeleteCategoryModal = () => {\n        return (\n            <Modal\n                modalTitle=\"Confirm\"\n                show={deleteCategoryModal}\n                handleClose={() => setDeleteCategoryModal(false)}\n                buttons={[\n                    {\n                        label: \"No\",\n                        color: \"primary\",\n                        onClick: () => {\n                            alert('no');\n                        }\n                    },\n                    {\n                        label: \"Yes\",\n                        color: \"danger\",\n                        onClick: deleteCategories\n                    }\n                ]}\n            >\n                <h5>Expanded</h5>\n                {expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n                <h5>Checked</h5>\n                {checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n            </Modal>\n        );\n    }\n\n    const categoryList = createCategoryList(category.categories);\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h3>Category</h3>\n                            <div className='actionBtnContainer'>\n                                <span>Actions : </span>\n                                <button onClick={handleShow}><IoIosAdd/><span>Add</span></button>\n                                <button onClick={deleteCategory}><IoIosTrash/><span>Delete</span></button>\n                                <button onClick={updateCategory}><IoIosCloudUpload/><span>Edit</span></button>\n                            </div>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        {/* <ul>\n                            {renderCategories(category.categories)}\n                        </ul> */}\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />,\n                            }}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n\n            <AddCategoryModal\n                show={show}\n                handleClose={()=>setShow(false)}\n                onSubmit={handleClose}\n                modalTitle={\"Add New Category\"}\n                categoryName={categoryName}\n                setCategoryName={setCategoryName}\n                parentCategoryId={parentCategoryId}\n                setParentCategoryId={setParentCategoryId}\n                categoryList={categoryList}\n                handleCategoryImage={handleCategoryImage}\n            />\n\n            <UpdateCategoriesModal\n                show={updateCategoryModal}\n                handleClose={()=>setUpdateCategoryModal(false)}\n                onSubmit={updateCategoriesForm}\n                modalTitle={\"Update Categories\"}\n                size=\"lg\"\n                expandedArray={expandedArray}\n                checkedArray={checkedArray}\n                handleCategoryInput={handleCategoryInput}\n                categoryList={categoryList}\n            />\n            {/* {renderAddCategoryModal()} */}\n\n            {renderDeleteCategoryModal()}\n        </Layout>\n    )\n\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\constants.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\axios.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\user.actions.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\product.action.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\category.action.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\initialData.action.js",["229"],[],"import axios from \"../helpers/axios\";\nimport { categoryConstants, initialDataConstants, orderConstants, productConstants } from \"./constants\"\n\nexport const getInitialData=()=>{\n    return async dispatch=>{\n        const res=await axios.post('/initialData');\n        if (res.status===200){\n            const { categories,products,orders }=res.data;\n            dispatch({\n                type:categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\n                payload:{categories}\n            });\n            dispatch({\n                type:productConstants.GET_ALL_PRODUCTS_SUCCESS,\n                payload:{products}\n            })\n            dispatch({\n                type:orderConstants.GET_CUSTOMER_ORDER_SUCCESS,\n                payload:{orders}\n            })\n        }\n        console.log(res);\n    }\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\urlConfig.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\product.reducer.js",["230","231"],[],"import { productConstants } from \"../actions/constants\";\n\nconst initialState={\n    products:[]\n};\n\nexport default (state=initialState,action)=>{\n    switch(action.type){\n        case productConstants.GET_ALL_PRODUCTS_SUCCESS:\n            state={\n                ...state,\n                products:action.payload.products\n            }\n            break;\n    }\n    return state;\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\user.reducer.js",["232","233"],[],"import { userConstants } from \"../actions/constants\"\n\nconst initState={\n    error:null,\n    message:'',\n    loading:false\n}\n\nexport default (state=initState,action)=>{\n    switch(action.type){\n        case userConstants.USER_REGISTER_REQUEST:\n            state={\n                ...state,\n                loading:true\n            }\n            break;\n        case userConstants.USER_REGISTER_SUCCESS:\n            state={\n                ...state,\n                loading:false,\n                message:action.payload.message\n            }\n            break;\n        case userConstants.USER_REGISTER_FAILURE:\n            state={\n                ...state,\n                loading:false,\n                message:action.payload.error\n            }\n            break;\n    }\n    return state;\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\auth.reducers.js",["234","235"],[],"import { authConstants } from \"../actions/constants\"\n\nconst initState = {\n    token: null,\n    user: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        picture: ''\n    },\n    authenticate: false,\n    authenticating: false,\n    loading:false,\n    error:null,\n    message:''\n}\n\nexport default (state = initState, action) => {\n    console.log(action);\n    switch (action.type) {\n        case authConstants.LOGIN_REQUEST:\n            state = {\n                ...state,\n                authenticating: true\n            }\n            break;\n        case authConstants.LOGIN_SUCCESS:\n            state = {\n                ...state,\n                user: action.payload.user,\n                token: action.payload.token,\n                authenticate: true,\n                authenticating: false\n            }\n            break;\n        case authConstants.LOGOUT_REQUEST:\n            state = {\n                ...state,\n                loading:true\n            }\n            break;\n        case authConstants.LOGOUT_SUCCESS:\n            state = {\n                ...initState\n            }\n            break;\n        case authConstants.LOGOUT_FAILURE:\n            state = {\n                ...state,\n                error:action.payload.error,\n                loading:false\n            }\n            break;\n    }\n    return state;\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\category.reducer.js",["236","237","238","239"],[],"import { categoryConstants } from \"../actions/constants\";\n\nconst initState = {\n    categories: [],\n    loading: false,\n    error: null\n};\n\nconst buildNewCategories = (parentId, categories, category) => {\n    let myCategories = [];\n    if (parentId == undefined) {\n        return [\n            ...categories,\n            {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                type:category.type,\n                children: []\n            }\n        ];\n    }\n    for (let cat of categories) {\n\n        if (cat._id == parentId) {\n            const newCategory = {\n                _id: category._id,\n                name: category.name,\n                slug: category.slug,\n                parentId: category.parentId,\n                type:category.type,\n                children: []\n            };\n            myCategories.push({\n                ...cat,\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n            });\n        } else {\n            myCategories.push({\n                ...cat,\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n            })\n        }\n\n\n    }\n    return myCategories;\n}\n\nexport default (state = initState, action) => {\n    switch (action.type) {\n        case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                categories: action.payload.categories\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n            const category = action.payload.category;\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n            console.log(updatedCategories);\n            state = {\n                ...state,\n                categories: updatedCategories,\n                loading: false\n            }\n            break;\n        case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n            state = {\n                ...initState,\n                loading:false,\n                error:action.payload.error\n            }\n            break;\n        case categoryConstants.UPDATE_CATEGORIES_REQUEST:\n            state = {\n                ...state,\n                loading: true\n            }\n            break;\n        case categoryConstants.UPDATE_CATEGORIES_SUCCESS:\n            state = {\n                ...state,\n                loading: false\n            }\n            break;\n        case categoryConstants.UPDATE_CATEGORIES_FAILURE:\n            state = {\n                ...state,\n                error: action.payload.error,\n                loading:false\n            }\n            break;\n        case categoryConstants.DELETE_CATEGORIES_REQUEST:\n            state={\n                ...state,\n                loading:true\n            }\n            break;\n        case categoryConstants.DELETE_CATEGORIES_SUCCESS:\n            state={\n                ...state,\n                loading:false\n            }\n            break;\n        case categoryConstants.DELETE_CATEGORIES_FAILURE:\n            state={\n                ...state,\n                loading:false,\n                error:action.payload.error   \n            }\n            break;\n    }\n    return state;\n\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\order.reducer.js",["240","241"],[],"import {orderConstants} from \"../actions/constants\";\r\n\r\nconst initState={\r\n    orders:[],\r\n}\r\n\r\nexport default (state=initState,action)=>{\r\n    switch(action.type){\r\n        case orderConstants.GET_CUSTOMER_ORDER_SUCCESS:\r\n            state={\r\n                ...state,\r\n                orders:action.payload.orders,\r\n            };\r\n            break;\r\n    }\r\n    return state;\r\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Input\\index.js",["242"],[],"import React from 'react'\nimport { Form } from 'react-bootstrap'\n\n/**\n* @author\n* @function Input\n**/\n\nconst Input = (props) => {\n    let input = null;\n    switch (props.type) {\n        case 'select':\n            input = <Form.Group className=\"mb-3\" >\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <select\n                className='form-control form-control-sm'\n                value={props.value}\n                onChange={props.onChange}\n                >\n                    <option value=\"\">{props.placeholder}</option>\n                    {\n                        props.options.length>0 ?\n                        props.options.map((option,index)=>{\n                            <option key={index} value={option.value}>{option.name}</option>\n                        }) : null\n                    }\n                </select>\n            </Form.Group>\n            break;\n        case 'text':\n        default:\n            input = <Form.Group className=\"mb-3\" >\n                {props.label && <Form.Label>{props.label}</Form.Label>}\n                <Form.Control\n                    type={props.type}\n                    placeholder={props.placeholder}\n                    value={props.value}\n                    onChange={props.onChange}\n                    {...props}\n                />\n                <Form.Text className=\"text-muted\">\n                    {props.errorMessage}\n                </Form.Text>\n            </Form.Group>\n    }\n    return input;\n\n}\n\nexport default Input;","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Layout\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Modal\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\Header\\index.js",["243"],[],"import React from 'react'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport { signout } from '../../actions';\n/**\n* @author\n* @function Header\n**/\n\nconst Header = (props) => {\n\n    const auth=useSelector(state=>state.auth);\n    const dispatch=useDispatch();\n\n    const logout= () =>{\n        dispatch(signout());\n    }\n\n    const renderNonLoggedInLinks = () => {\n        return (\n        <Nav>\n            {/* <Nav.Link href=\"#deets\">SignIn</Nav.Link> */}\n            <li className='nav-item'>\n                <NavLink to=\"/signin\" className=\"nav-link\">SignIn</NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to=\"/signup\" className=\"nav-link\">SignUp</NavLink>\n            </li>\n        </Nav>\n        )\n    }\n\n    const renderLoggedInLinks = () => {\n        return (\n        <Nav>\n            {/* <Nav.Link href=\"#deets\">SignIn</Nav.Link> */}\n            <li className='nav-item'>\n                <span className=\"nav-link\" onClick={logout}>SignOut</span>\n            </li>\n        </Nav>)\n    }\n\n    return (\n        <Navbar collapseOnSelect fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\" style={{ zIndex: 1 }}>\n            <Container fluid>\n                {/* <Navbar.Brand href=\"#home\">Admin Dashboard</Navbar.Brand> */}\n                <Link to=\"/\" className='navbar-brand'>Admin Dashboard</Link>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown> */}\n                    </Nav>\n                    {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\n\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n\n}\n\nexport default Header;","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\NewPage\\index.js",["244","245","246"],[],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport Modal from '../../components/UI/Modal/index';\r\nimport Input from '../../components/UI/Input/index';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport linearCategories from '../../helpers/linearCategories';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPage } from '../../actions/index'\r\n\r\n/**\r\n* @author\r\n* @function NewPage\r\n**/\r\n\r\nexport const NewPage = (props) => {\r\n\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const category = useSelector(state => state.category);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories));\r\n    }, [category]);\r\n\r\n    useEffect(() => {\r\n        console.log(page);\r\n        if (page.loading) {\r\n            setCreateModal(false);\r\n            setCreateModal(false);\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setDesc('');\r\n            setProducts([]);\r\n            setBanners([]);\r\n        }\r\n    }, [page]);\r\n\r\n    const onCategoryChange = (e) => {\r\n        const category = categories.find(category => category._id == e.target.value);\r\n        setCategoryId(e.target.value);\r\n        setType(category.type);\r\n    }\r\n    const handleBannerImages = (e) => {\r\n        setBanners([...banners, e.target.files[0]]);\r\n        console.log(e);\r\n    }\r\n\r\n    const handleProductImages = (e) => {\r\n        setProducts([...products, e.target.files[0]]);\r\n        console.log(e);\r\n    }\r\n\r\n    const submitPageForm = (e) => {\r\n        // e.preventDefault();\r\n        if (title === \"\") {\r\n            alert(\"Title is required\");\r\n            return;\r\n        }\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description', desc);\r\n        form.append('category', categoryId);\r\n        form.append('type', type);\r\n        banners.forEach((banner, index) => {\r\n            form.append('banners', banner);\r\n        });\r\n        products.forEach((product, index) => {\r\n            form.append('products', product);\r\n        });\r\n        dispatch(createPage(form));\r\n        // console.log({ title, desc, categoryId, type, banners, products });\r\n    }\r\n\r\n    const renderCreatePageModal = () => {\r\n        return (\r\n            <Modal\r\n                show={createModal}\r\n                modalTitle={'Create New Page'}\r\n                handleClose={()=>setCreateModal(false)}\r\n                onSubmit={submitPageForm}\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <select\r\n                                className='form-control form-control-sm'\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                            >\r\n                                <option value=\"\">Select Category</option>\r\n                                {\r\n                                    categories.map(cat =>\r\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    )\r\n                                }\r\n\r\n                            </select>\r\n                            {/* <Input\r\n                                type=\"select\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                                options={categories}\r\n                                placeholder={\"Select Category\"}\r\n                            /> */}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                placeholder={'Page Title'}\r\n                                className='form-control-sm'\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={desc}\r\n                                onChange={(e) => setDesc(e.target.value)}\r\n                                placeholder={'Page Description'}\r\n                                className='form-control-sm'\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        banners.length > 0 ?\r\n                            banners.map((banner, index) => {\r\n                                <Row key={index}>\r\n                                    <Col>{banner.name}</Col>\r\n                                </Row>\r\n                            }) : null\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <Input className='form-control'\r\n                                type=\"file\"\r\n                                name=\"banners\"\r\n                                onChange={handleBannerImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        products.length > 0 ?\r\n\r\n                            products.map((product, index) => {\r\n                                <Row key={index}>\r\n                                    <Col>{product.name}</Col>\r\n                                </Row>\r\n                            }) : null\r\n                    }\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                className='form-control'\r\n                                type=\"file\"\r\n                                name=\"products\"\r\n                                onChange={handleProductImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            {\r\n                page.loading ?\r\n                    <>\r\n                    <p>Creating Page ... Please wait</p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {renderCreatePageModal()}\r\n                        <button onClick={() => setCreateModal(true)}>Create Page</button>\r\n                    </>\r\n            }\r\n        </Layout>\r\n    )\r\n\r\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\page.action.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\reducers\\page.reducer.js",["247","248"],[],"import { pageConstants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    error: null,\r\n    loading: false,\r\n    page: {}\r\n}\r\n\r\nexport default (state = initState, action)=>{\r\n    switch (action.type) {\r\n        case pageConstants.CREATE_PAGE_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case pageConstants.CREATE_PAGE_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false\r\n            }\r\n            break;\r\n        case pageConstants.CREATE_PAGE_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Category\\components\\UpdateCategoriesModal.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\container\\Category\\components\\AddCategoryModal.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\components\\UI\\Card\\index.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\helpers\\linearCategories.js",[],[],"C:\\Users\\Pr02v\\Desktop\\mern-ecommerce\\admin-app\\src\\actions\\order.action.js",["249"],[],"import axios from \"../helpers/axios\";\r\nimport { pageConstants } from \"./constants\"\r\n\r\nexport const updateOrder=(payload)=>{\r\n    return async dispatch=>{\r\n        // dispatch({type:pageConstants.CREATE_PAGE_REQUEST});\r\n        try{\r\n            const res=await axios.post('/order/update',payload);\r\n            console.log(res);\r\n            if (res.status===201){\r\n                // dispatch({\r\n                //     type:pageConstants.CREATE_PAGE_SUCCESS,\r\n                //     payload:{page:res.data.page}\r\n                // });\r\n            }else{\r\n                // dispatch({\r\n                //     type:pageConstants.CREATE_PAGE_FAILURE,\r\n                //     payload:{error:res.data.error}\r\n                // });\r\n            }\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}",{"ruleId":"250","severity":1,"message":"251","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":29,"column":6,"nodeType":"256","endLine":29,"endColumn":25,"suggestions":"257"},{"ruleId":"250","severity":1,"message":"258","line":1,"column":17,"nodeType":"252","messageId":"253","endLine":1,"endColumn":26},{"ruleId":"250","severity":1,"message":"259","line":18,"column":10,"nodeType":"252","messageId":"253","endLine":18,"endColumn":15},{"ruleId":"250","severity":1,"message":"260","line":18,"column":16,"nodeType":"252","messageId":"253","endLine":18,"endColumn":24},{"ruleId":"250","severity":1,"message":"259","line":20,"column":10,"nodeType":"252","messageId":"253","endLine":20,"endColumn":15},{"ruleId":"250","severity":1,"message":"260","line":20,"column":16,"nodeType":"252","messageId":"253","endLine":20,"endColumn":24},{"ruleId":"250","severity":1,"message":"261","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":19},{"ruleId":"250","severity":1,"message":"262","line":2,"column":21,"nodeType":"252","messageId":"253","endLine":2,"endColumn":24},{"ruleId":"250","severity":1,"message":"263","line":2,"column":26,"nodeType":"252","messageId":"253","endLine":2,"endColumn":29},{"ruleId":"250","severity":1,"message":"264","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":198,"column":19,"nodeType":"267","endLine":198,"endColumn":63},{"ruleId":"250","severity":1,"message":"268","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":13},{"ruleId":"269","severity":1,"message":"270","line":96,"column":79,"nodeType":"271","messageId":"272","endLine":96,"endColumn":81},{"ruleId":"269","severity":1,"message":"270","line":100,"column":79,"nodeType":"271","messageId":"272","endLine":100,"endColumn":81},{"ruleId":"269","severity":1,"message":"270","line":108,"column":18,"nodeType":"271","messageId":"272","endLine":108,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":109,"column":82,"nodeType":"271","messageId":"272","endLine":109,"endColumn":84},{"ruleId":"269","severity":1,"message":"270","line":111,"column":25,"nodeType":"271","messageId":"272","endLine":111,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":112,"column":84,"nodeType":"271","messageId":"272","endLine":112,"endColumn":86},{"ruleId":"250","severity":1,"message":"273","line":144,"column":15,"nodeType":"252","messageId":"253","endLine":144,"endColumn":23},{"ruleId":"250","severity":1,"message":"274","line":2,"column":29,"nodeType":"252","messageId":"253","endLine":2,"endColumn":49},{"ruleId":"275","severity":1,"message":"276","line":7,"column":1,"nodeType":"277","endLine":17,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":8,"column":5,"nodeType":"280","messageId":"281","endLine":15,"endColumn":6},{"ruleId":"275","severity":1,"message":"276","line":9,"column":1,"nodeType":"277","endLine":33,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":10,"column":5,"nodeType":"280","messageId":"281","endLine":31,"endColumn":6},{"ruleId":"275","severity":1,"message":"276","line":18,"column":1,"nodeType":"277","endLine":56,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":20,"column":5,"nodeType":"280","messageId":"281","endLine":54,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":11,"column":18,"nodeType":"271","messageId":"272","endLine":11,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":25,"column":21,"nodeType":"271","messageId":"272","endLine":25,"endColumn":23},{"ruleId":"275","severity":1,"message":"276","line":50,"column":1,"nodeType":"277","endLine":122,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":51,"column":5,"nodeType":"280","messageId":"281","endLine":119,"endColumn":6},{"ruleId":"275","severity":1,"message":"276","line":7,"column":1,"nodeType":"277","endLine":17,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":8,"column":5,"nodeType":"280","messageId":"281","endLine":15,"endColumn":6},{"ruleId":"282","severity":1,"message":"283","line":23,"column":57,"nodeType":"284","messageId":"285","endLine":23,"endColumn":59},{"ruleId":"250","severity":1,"message":"286","line":2,"column":23,"nodeType":"252","messageId":"253","endLine":2,"endColumn":34},{"ruleId":"269","severity":1,"message":"270","line":47,"column":67,"nodeType":"271","messageId":"272","endLine":47,"endColumn":69},{"ruleId":"282","severity":1,"message":"283","line":138,"column":57,"nodeType":"284","messageId":"285","endLine":138,"endColumn":59},{"ruleId":"282","severity":1,"message":"283","line":156,"column":59,"nodeType":"284","messageId":"285","endLine":156,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":9,"column":1,"nodeType":"277","endLine":32,"endColumn":2},{"ruleId":"278","severity":1,"message":"279","line":10,"column":5,"nodeType":"280","messageId":"281","endLine":30,"endColumn":6},{"ruleId":"250","severity":1,"message":"287","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":23},"no-unused-vars","'getAllCategory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["288"],"'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Input' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'idsArray' is assigned a value but never used.","'initialDataConstants' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'NavDropdown' is defined but never used.","'pageConstants' is defined but never used.",{"desc":"289","fix":"290"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"291","text":"292"},[949,968],"[auth.authenticate, dispatch]"]