{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pr02v\\\\Desktop\\\\Flipkart-Ecommerce-3ccf383bf3dace1c766f3e84bc37d8e42bcdd09e\\\\Flipkart-Ecommerce-3ccf383bf3dace1c766f3e84bc37d8e42bcdd09e\\\\admin-app\\\\src\\\\container\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCategory, getAllCategory } from '../../actions';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input/index';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowDown, IoIosArrowForward } from 'react-icons/io';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n/**\n* @author\n* @function Category\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    console.log(form);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId(''); // const cat={\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n    // console.log(cat);\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let mycategories = [];\n\n    for (let category of categories) {\n      mycategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return mycategories;\n  };\n\n  const createCategoryList = function (categories) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 40\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 42\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 44\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 46\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateCategory,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: \"Add new Category\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: 'Category Name',\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: () => setUpdateCategoryModal(false),\n      modalTitle: \"Update Categories\",\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Expanded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: 'Category Name',\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Checked Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: 'Category Name',\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"I/gN+cBEAAcQq7kQat6MZlrPiVA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","useDispatch","useSelector","addCategory","getAllCategory","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowDown","IoIosArrowForward","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","dispatch","handleClose","form","FormData","append","console","log","handleShow","renderCategories","categories","mycategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","forEach","categoryId","index","find","_index","handleCategoryInput","key","type","updatedCheckedArray","map","item","updatedExpandedArray","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen","option"],"sources":["C:/Users/Pr02v/Desktop/Flipkart-Ecommerce-3ccf383bf3dace1c766f3e84bc37d8e42bcdd09e/Flipkart-Ecommerce-3ccf383bf3dace1c766f3e84bc37d8e42bcdd09e/admin-app/src/container/Category/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addCategory, getAllCategory } from '../../actions';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input/index';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowDown, IoIosArrowForward } from 'react-icons/io';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n/**\n* @author\n* @function Category\n**/\n\nexport const Category = (props) => {\n    const category = useSelector(state => state.category);\n    const [categoryName, setCategoryName] = useState('');\n    const [parentCategoryId, setParentCategoryId] = useState('');\n    const [categoryImage, setCategoryImage] = useState('');\n    const [show, setShow] = useState(false);\n    const [checked, setChecked] = useState([]);\n    const [expanded, setExpanded] = useState([]);\n    const [checkedArray, setCheckedArray] = useState([]);\n    const [expandedArray, setExpandedArray] = useState([]);\n    const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n    const dispatch = useDispatch();\n\n\n\n    const handleClose = () => {\n        const form = new FormData();\n        form.append('name', categoryName);\n        form.append('parentId', parentCategoryId);\n        form.append('categoryImage', categoryImage);\n        console.log(form);\n        dispatch(addCategory(form));\n        setCategoryName('');\n        setParentCategoryId('');\n        // const cat={\n        //     categoryName,\n        //     parentCategoryId,\n        //     categoryImage\n        // };\n        // console.log(cat);\n        setShow(false);\n    }\n    const handleShow = () => setShow(true);\n\n    const renderCategories = (categories) => {\n\n        let mycategories = [];\n        for (let category of categories) {\n            mycategories.push(\n                {\n                    label: category.name,\n                    value: category._id,\n                    children: category.children.length > 0 && renderCategories(category.children)\n                }\n            );\n        }\n        return mycategories;\n    }\n\n    const createCategoryList = (categories, options = []) => {\n        for (let category of categories) {\n            options.push({ value: category._id, name: category.name, parentId: category.parentId });\n            if (category.children.length > 0) {\n                createCategoryList(category.children, options);\n            }\n        }\n        return options;\n    }\n\n    const handleCategoryImage = (e) => {\n        setCategoryImage(e.target.files[0]);\n    }\n\n    const updateCategory = () => {\n        setUpdateCategoryModal(true)\n        const categories = createCategoryList(category.categories)\n        const checkedArray = [];\n        const expandedArray = [];\n        checked.length > 0 && checked.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value)\n            category && checkedArray.push(category);\n        })\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\n            const category = categories.find((category, _index) => categoryId == category.value)\n            category && expandedArray.push(category);\n        })\n        setCheckedArray(checkedArray);\n        setExpandedArray(expandedArray);\n        console.log({ checked, expanded, categories, checkedArray, expandedArray });\n    }\n\n    const handleCategoryInput = (key, value, index, type) => {\n        if (type == \"checked\") {\n            const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\n            setCheckedArray(updatedCheckedArray);\n        } else if (type == \"expanded\") {\n            const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\n            setExpandedArray(updatedExpandedArray);\n        }\n    }\n\n    return (\n        <Layout sidebar>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                            <h1>Category</h1>\n                            <button onClick={handleShow}>Add</button>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        {/* <ul>\n                            {renderCategories(category.categories)}\n                        </ul> */}\n                        <CheckboxTree\n                            nodes={renderCategories(category.categories)}\n                            checked={checked}\n                            expanded={expanded}\n                            onCheck={checked => setChecked(checked)}\n                            onExpand={expanded => setExpanded(expanded)}\n                            icons={{\n                                check: <IoIosCheckbox />,\n                                uncheck: <IoIosCheckboxOutline />,\n                                halfCheck: <IoIosCheckboxOutline />,\n                                expandClose: <IoIosArrowForward />,\n                                expandOpen: <IoIosArrowDown />,\n                            }}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <button>Delete</button>\n                        <button onClick={updateCategory}>Edit</button>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Modal\n                show={show}\n                handleClose={handleClose}\n                modalTitle={\"Add new Category\"}\n            >\n                <Input\n                    value={categoryName}\n                    placeholder={'Category Name'}\n                    onChange={(e) => setCategoryName(e.target.value)}\n                />\n                <select\n                    className=\"form-control\"\n                    value={parentCategoryId}\n                    onChange={(e) => setParentCategoryId(e.target.value)}>\n                    <option>Select Category</option>\n                    {\n                        createCategoryList(category.categories).map(option =>\n                            <option key={option.value} value={option.value}>{option.name}</option>)\n                    }\n\n                </select>\n\n                <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\n            </Modal>\n\n            {/* Edit Categories */}\n            <Modal\n                show={updateCategoryModal}\n                handleClose={() => setUpdateCategoryModal(false)}\n                modalTitle={\"Update Categories\"}\n                size=\"lg\"\n            >\n                <Row>\n                    <Col>\n                        <h6>Expanded</h6>\n                    </Col>\n                </Row>\n                {\n                    expandedArray.length > 0 &&\n                    expandedArray.map((item, index) =>\n                        <Row key={index}>\n                            <Col>\n                                <Input\n                                    value={item.name}\n                                    placeholder={'Category Name'}\n\n                                    onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\n                                />\n                            </Col>\n                            <Col>\n                                <select\n                                    className=\"form-control\"\n                                    value={item.parentId}\n                                    onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\n                                    <option>Select Category</option>\n                                    {\n                                        createCategoryList(category.categories).map(option =>\n                                            <option key={option.value} value={option.value}>{option.name}</option>)\n                                    }\n\n                                </select>\n                            </Col>\n                            <Col>\n                                <select\n                                    className='form-control'\n                                >\n                                    <option value=\"\">Select Type</option>\n                                    <option value=\"store\">Store</option>\n                                    <option value=\"product\">Product</option>\n                                    <option value=\"page\">Page</option>\n                                </select>\n                            </Col>\n                        </Row>\n                    )\n                }\n                <h6>Checked Array</h6>\n                {\n                    checkedArray.length > 0 &&\n                    checkedArray.map((item, index) =>\n                        <Row key={index}>\n                            <Col>\n                                <Input\n                                    value={item.name}\n                                    placeholder={'Category Name'}\n\n                                    onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\n                                />\n                            </Col>\n                            <Col>\n                                <select\n                                    className=\"form-control\"\n                                    value={item.parentId}\n                                    onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\n                                    <option>Select Category</option>\n                                    {\n                                        createCategoryList(category.categories).map(option =>\n                                            <option key={option.value} value={option.value}>{option.name}</option>)\n                                    }\n\n                                </select>\n                            </Col>\n                            <Col>\n                                <select\n                                    className='form-control'\n                                >\n                                    <option value=\"\">Select Type</option>\n                                    <option value=\"store\">Store</option>\n                                    <option value=\"product\">Product</option>\n                                    <option value=\"page\">Page</option>\n                                </select>\n                            </Col>\n                        </Row>\n                    )\n                }\n\n\n                {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\n            </Modal>\n\n        </Layout>\n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}