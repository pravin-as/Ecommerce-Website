{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { authConstants } from \"./constants\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post('/admin/signin', { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to login'\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post('/admin/signout');\n\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","authConstants","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"sources":["C:/Users/Pr02v/Desktop/mern-ecommerce/admin-app/src/actions/auth.actions.js"],"sourcesContent":["import axios from \"../helpers/axios\";\nimport { authConstants } from \"./constants\"\n\nexport const login = (user) => {\n    console.log(user);\n\n    return async (dispatch) => {\n\n        dispatch({ type: authConstants.LOGIN_REQUEST });\n        const res = await axios.post('/admin/signin', {\n            ...user\n        })\n\n        if (res.status === 200) {\n            const { token, user } = res.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('user', JSON.stringify(user));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        } else {\n            if (res.status === 400) {\n                dispatch({\n                    type: authConstants.LOGIN_FAILURE,\n                    payload: { error: res.data.error }\n                });\n            }\n        }\n    }\n}\n\n\nexport const isUserLoggedIn = () => {\n    return async dispatch => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch({\n                type: authConstants.LOGIN_SUCCESS,\n                payload: {\n                    token, user\n                }\n            });\n        } else {\n            dispatch({\n                type: authConstants.LOGIN_FAILURE,\n                payload: { error: 'Failed to login' }\n            });\n        }\n    }\n}\n\nexport const signout = () => {\n    return async dispatch => {\n        dispatch({type:authConstants.LOGOUT_REQUEST});\n        const res = await axios.post('/admin/signout');\n\n        if (res.status === 200) {\n            localStorage.clear();\n            dispatch({type: authConstants.LOGOUT_SUCCESS});\n        }else{\n            dispatch({\n                type:authConstants.LOGOUT_FAILURE,\n                payload:{error:res.data.error}\n            });\n        }\n\n\n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;EAC3BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;EAEA,OAAO,MAAOG,QAAP,IAAoB;IAEvBA,QAAQ,CAAC;MAAEC,IAAI,EAAEN,aAAa,CAACO;IAAtB,CAAD,CAAR;IACA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,eAAX,EAA4B,EAC1C,GAAGP;IADuC,CAA5B,CAAlB;;IAIA,IAAIM,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;MACpB,MAAM;QAAEC,KAAF;QAAST;MAAT,IAAkBM,GAAG,CAACI,IAA5B;MACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;MACAE,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,IAAf,CAA7B;MACAG,QAAQ,CAAC;QACLC,IAAI,EAAEN,aAAa,CAACiB,aADf;QAELC,OAAO,EAAE;UACLP,KADK;UACET;QADF;MAFJ,CAAD,CAAR;IAMH,CAVD,MAUO;MACH,IAAIM,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;QACpBL,QAAQ,CAAC;UACLC,IAAI,EAAEN,aAAa,CAACmB,aADf;UAELD,OAAO,EAAE;YAAEE,KAAK,EAAEZ,GAAG,CAACI,IAAJ,CAASQ;UAAlB;QAFJ,CAAD,CAAR;MAIH;IACJ;EACJ,CAzBD;AA0BH,CA7BM;AAgCP,OAAO,MAAMC,cAAc,GAAG,MAAM;EAChC,OAAO,MAAMhB,QAAN,IAAkB;IACrB,MAAMM,KAAK,GAAGE,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;;IACA,IAAIX,KAAJ,EAAW;MACP,MAAMT,IAAI,GAAGa,IAAI,CAACQ,KAAL,CAAWV,YAAY,CAACS,OAAb,CAAqB,MAArB,CAAX,CAAb;MACAjB,QAAQ,CAAC;QACLC,IAAI,EAAEN,aAAa,CAACiB,aADf;QAELC,OAAO,EAAE;UACLP,KADK;UACET;QADF;MAFJ,CAAD,CAAR;IAMH,CARD,MAQO;MACHG,QAAQ,CAAC;QACLC,IAAI,EAAEN,aAAa,CAACmB,aADf;QAELD,OAAO,EAAE;UAAEE,KAAK,EAAE;QAAT;MAFJ,CAAD,CAAR;IAIH;EACJ,CAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMI,OAAO,GAAG,MAAM;EACzB,OAAO,MAAMnB,QAAN,IAAkB;IACrBA,QAAQ,CAAC;MAACC,IAAI,EAACN,aAAa,CAACyB;IAApB,CAAD,CAAR;IACA,MAAMjB,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,gBAAX,CAAlB;;IAEA,IAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;MACpBG,YAAY,CAACa,KAAb;MACArB,QAAQ,CAAC;QAACC,IAAI,EAAEN,aAAa,CAAC2B;MAArB,CAAD,CAAR;IACH,CAHD,MAGK;MACDtB,QAAQ,CAAC;QACLC,IAAI,EAACN,aAAa,CAAC4B,cADd;QAELV,OAAO,EAAC;UAACE,KAAK,EAACZ,GAAG,CAACI,IAAJ,CAASQ;QAAhB;MAFH,CAAD,CAAR;IAIH;EAGJ,CAfD;AAgBH,CAjBM"},"metadata":{},"sourceType":"module"}